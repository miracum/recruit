services:
  traefik:
    image: docker.io/library/traefik:v3.4.0@sha256:4cf907247939b5d20bf4eff73abd21cb413c339600dde76dbc94a874b2578a27
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "127.0.0.1:80:80"
    volumes:
      # kics-scan ignore-line
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      resources:
        limits:
          memory: 128m

  fhir:
    image: docker.io/hapiproject/hapi:v8.0.0@sha256:bf6ecbb4492361ae258a2bde6d4daf4c505b1a98e0925745aa0689e95b2d157e
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    deploy:
      resources:
        limits:
          memory: 2048m
    read_only: true
    tmpfs:
      - /tmp
      - /app/target
    privileged: false
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://fhir-db:5432/fhir?currentSchema=public"
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      spring.jpa.properties.hibernate.dialect: ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgres94Dialect
      HAPI_FHIR_VALIDATION_REQUESTS_ENABLED: "false"
      HAPI_FHIR_USE_APACHE_ADDRESS_STRATEGY: "true"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_DELETE: "false"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_WRITE: "false"
      HAPI_FHIR_SUBSCRIPTION_RESTHOOK_ENABLED: "true"
      HAPI_FHIR_ALLOW_MULTIPLE_DELETE: "true"
      JAVA_TOOL_OPTIONS: "-javaagent:/app/opentelemetry-javaagent.jar"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_LOGS_EXPORTER: "none"
      OTEL_TRACES_EXPORTER: "otlp"
      OTEL_SERVICE_NAME: "hapi-fhir-jpaserver"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4317"
    depends_on:
      traefik:
        condition: service_started
      fhir-db:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fhir.loadbalancer.server.port=8080"
      - "traefik.http.routers.fhir.rule=Host(`recruit-fhir-server.127.0.0.1.nip.io`)"
      - "traefik.http.routers.fhir.entrypoints=web"

  fhir-db:
    image: docker.io/bitnami/postgresql:17.4.0@sha256:a8a39ccbf84b527b470ace397c3b0bb0b8d97bad194b142f4a4128a20c1b8b32
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      POSTGRESQL_PASSWORD: postgres # pragma: allowlist secret
      POSTGRESQL_DATABASE: fhir

  broadsea-atlasdb:
    image: docker.io/ohdsi/broadsea-atlasdb:2.2.0@sha256:ec23023c756ed32426c922a2565af26718100e8cef09c927d0a7b9f07b204935
    profiles:
      - omop
    ports:
      - "127.0.0.1:25432:5432"

  ohdsi-webapi:
    image: docker.io/ohdsi/webapi:2.14.0@sha256:582b59b186fde5936081c1df6e41cba53e45e112d5b4875ddfda1e4dee4b2981
    profiles:
      - omop
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 4096m
    read_only: true
    tmpfs:
      - /tmp
    privileged: false
    environment:
      DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      DATASOURCE_URL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: mypass
      DATASOURCE_OHDSI_SCHEMA: webapi
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: webapi
      SPRING_BATCH_REPOSITORY_TABLEPREFIX: webapi.BATCH_
      FLYWAY_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      FLYWAY_DATASOURCE_URL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      FLYWAY_DATASOURCE_USERNAME: postgres
      FLYWAY_DATASOURCE_PASSWORD: mypass
      FLYWAY_LOCATIONS: classpath:db/migration/postgresql
      FLYWAY_PLACEHOLDERS_OHDSISCHEMA: webapi
      FLYWAY_SCHEMAS: webapi
      FLYWAY_BASELINEONMIGRATE: "true"
      FLYWAY_TABLE: schema_history
      flyway_baselineVersionAsString: "2.2.5.20180212152023" # this env var is case sensitive
      FLYWAY_BASELINEDESCRIPTION: Base Migration
      SECURITY_CORS_ENABLED: "true"
      SECURITY_ORIGIN: "*"
      # SECURITY_PROVIDER: "AtlasRegularSecurity"
      # SECURITY_DB_DATASOURCE_URL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      # SECURITY_DB_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      # SECURITY_DB_DATASOURCE_SCHEMA: webapi
      # SECURITY_DB_DATASOURCE_USERNAME: postgres
      # SECURITY_DB_DATASOURCE_PASSWORD: mypass
      # SECURITY_DB_DATASOURCE_AUTHENTICATIONQUERY: >-
      #   SELECT password, first_name AS firstname, middle_name AS middlename, last_name AS lastname, username FROM webapi.basic_security_users WHERE username = ?
      JAVA_OPTS: "-javaagent:/var/lib/ohdsi/webapi/opentelemetry-javaagent.jar"
      OTEL_TRACES_EXPORTER: "jaeger"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_LOGS_EXPORTER: "none"
      OTEL_SERVICE_NAME: "ohdsi-webapi"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
    depends_on:
      - broadsea-atlasdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ohdsi-webapi.rule=Host(`recruit-ohdsi.127.0.0.1.nip.io`) && PathPrefix(`/WebAPI`)"
      - "traefik.http.routers.ohdsi-webapi.entrypoints=web"

  ohdsi-atlas:
    image: docker.io/ohdsi/atlas:2.14.1@sha256:bd095ed794a6619f877d72c13ecfc22c8bb8a863937392857866e4bd6015157f
    profiles:
      - omop
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 64m
          cpus: "1"
    privileged: false
    read_only: false
    environment:
      WEBAPI_URL: ""
    volumes:
      - ./config-local.js:/usr/share/nginx/html/atlas/js/config-local.js:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ohdsi-atlas.rule=Host(`recruit-ohdsi.127.0.0.1.nip.io`) && PathPrefix(`/atlas`)"
      - "traefik.http.routers.ohdsi-atlas.entrypoints=web"

  list:
    build:
      context: ../list
    profiles:
      - list
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    privileged: false
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      FHIR_URL: "http://fhir:8080/fhir"
      KEYCLOAK_DISABLED: "false"
      KEYCLOAK_AUTH_URL: "http://host.docker.internal:8083/"
      KEYCLOAK_CLIENT_ID: "recruit-list"
      KEYCLOAK_REALM: "recruIT"
      TRACING_ENABLED: "true"
      OTEL_SERVICE_NAME: "list"
      OTEL_EXPORTER_JAEGER_AGENT_HOST: "jaeger"
    ports:
      - "127.0.0.1:8085:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.recruit-list.loadbalancer.server.port=8080"
      - "traefik.http.routers.recruit-list.rule=Host(`recruit-list.127.0.0.1.nip.io`)"
      - "traefik.http.routers.recruit-list.entrypoints=web"

  notify:
    build:
      context: ..
      args:
        MODULE_NAME: notify
    profiles:
      - notify
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    privileged: false
    tmpfs:
      - /tmp
    environment:
      FHIR_URL: "http://fhir:8080/fhir"
      WEBHOOK_ENDPOINT: http://notify:8080/on-list-change
      NOTIFY_MAILER_LINKTEMPLATE: http://recruit-list.127.0.0.1.nip.io/recommendations/[list_id]
      NOTIFY_MAILER_FROM: recruit-dev@example.com
      SPRING_MAIL_HOST: maildev
      SPRING_MAIL_PORT: "1025"
      SPRING_MAIL_USERNAME: user
      SPRING_MAIL_PASSWORD: pass
      JAVA_TOOL_OPTIONS: "-javaagent:/app/opentelemetry-javaagent.jar"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_LOGS_EXPORTER: "none"
      OTEL_TRACES_EXPORTER: "jaeger"
      OTEL_SERVICE_NAME: "recruit-notify"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
    volumes:
      - ../list/notify-rules.dev.yaml:/app/config/notify-rules/application.yaml:ro

  query:
    build:
      context: ..
      args:
        MODULE_NAME: query
    profiles:
      - query
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    privileged: false
    tmpfs:
      - /tmp
    environment:
      FHIR_URL: "http://fhir:8080/fhir"
      OMOP_JDBCURL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      OMOP_USERNAME: postgres
      OMOP_PASSWORD: mypass
      OMOP_RESULTSSCHEMA: demo_cdm_results
      OMOP_CDMSCHEMA: demo_cdm
      QUERY_WEBAPI_BASE_URL: http://ohdsi-webapi:8080/WebAPI
      QUERY_WEBAPI_COHORT_CACHE_SCHEMA: webapi
      ATLAS_DATASOURCE: EUNOMIA
      QUERY_SCHEDULE_UNIXCRON: "* * * * *"
      QUERY_SELECTOR_MATCHLABELS: ""

  query-fhir-trino:
    build:
      context: ..
      args:
        MODULE_NAME: query-fhir-trino
    profiles:
      - query-fhir-trino
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    privileged: false
    environment:
      FHIR_URL: "http://fhir:8080/fhir"
      SPRING_DATASOURCE_URL: "jdbc:trino://trino:8080/fhir/default"
      SPRING_DATASOURCE_USERNAME: "trino"
      SPRING_DATASOURCE_PASSWORD: ""
    volumes:
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 1024

  jaeger:
    image: docker.io/jaegertracing/jaeger:2.5.0@sha256:20d715ade1cf32e8c2be1a288317c2126376ce60811be71f0856793d7f849127
    ports:
      - "127.0.0.1:16686:16686"
      - "127.0.0.1:6831:6831/udp"
      - "127.0.0.1:6832:6832/udp"
      - "127.0.0.1:14250:14250/tcp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      - "traefik.http.routers.jaeger.rule=Host(`recruit-jaeger.127.0.0.1.nip.io`)"
      - "traefik.http.routers.jaeger.entrypoints=web"

  maildev:
    image: docker.io/maildev/maildev:2.2.1@sha256:180ef51f65eefebb0e7122d8308813c1fd7bff164bc440ce5a3c2feee167a810
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    deploy:
      resources:
        limits:
          memory: 64m
    read_only: true
    tmpfs:
      - /tmp
    ports:
      - "127.0.0.1:3025:1025"
      - "127.0.0.1:2080:1080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.maildev.loadbalancer.server.port=1080"
      - "traefik.http.routers.maildev.rule=Host(`recruit-maildev.127.0.0.1.nip.io`)"
      - "traefik.http.routers.maildev.entrypoints=web"

  notify-ha-db:
    image: docker.io/bitnami/postgresql:17.4.0@sha256:a8a39ccbf84b527b470ace397c3b0bb0b8d97bad194b142f4a4128a20c1b8b32
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      POSTGRESQL_PASSWORD: postgres # pragma: allowlist secret
      POSTGRESQL_DATABASE: recruit_notify_jobs
    ports:
      - "127.0.0.1:6432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.3@sha256:60f7adee39486c70607ca9b61394bcf7b9607f620efcef64b99f6fc5ffd031e2
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    deploy:
      resources:
        limits:
          memory: 2048m
    command:
      - start-dev
      - --import-realm
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
    volumes:
      - type: bind
        source: ./keycloak/recruit-realm-export.json
        target: /opt/keycloak/data/import/recruit-realm-export.json
        read_only: true
    ports:
      - 8083:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak.rule=Host(`recruit-keycloak.127.0.0.1.nip.io`)"
      - "traefik.http.routers.keycloak.entrypoints=web"

  minio:
    image: docker.io/bitnami/minio:2025.4.22@sha256:50cec18ac4184af4671a78aedd5554942c8ae105d51a465fa82037949046da01
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    environment:
      MINIO_UPDATE: "off"
      MINIO_CALLHOME_ENABLE: "off"
      MINIO_ROOT_USER: "admin"
      # kics-scan ignore-line
      MINIO_ROOT_PASSWORD: "miniopass" # gitleaks:allow
      MINIO_DEFAULT_BUCKETS: "fhir"
      MINIO_SCHEME: "http"
    ports:
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9000:9000"
    deploy:
      resources:
        limits:
          memory: 4G

  wait-for-minio:
    image: docker.io/curlimages/curl:8.13.0@sha256:d43bdb28bae0be0998f3be83199bfb2b81e0a30b034b6d7586ce7e05de34c3fd
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: "no"
    environment:
      MINIO_ENDPOINT_URL: http://minio:9000
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$MINIO_ENDPOINT_URL/minio/health/live")" == "200" ]; do
            echo "$(date): Waiting for minio server @ $$MINIO_ENDPOINT_URL to be up";
            sleep 5;
        done;
    depends_on:
      minio:
        condition: service_started

  upload-to-fhir-server:
    # the image is overkill, but it is the only one that has the necessary tools and is up-to-date
    image: ghcr.io/chgl/kube-powertools:v2.3.60@sha256:ba8b3c56b4839a8531dc361b538ec6c94906c05f3464ee7985a759cd33f057fd
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: "no"
    environment:
      FHIR_SERVER_BASE_URL: http://fhir:8080/fhir
    entrypoint: ["/bin/bash", "-c"]
    working_dir: /synthea/
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$FHIR_SERVER_BASE_URL/metadata")" == "200" ]; do
            echo "$(date): Waiting for FHIR server @ $$FHIR_SERVER_BASE_URL to be up";
            sleep 5;
        done;
        echo "Server is up. Sending resources.";
        ls -lsa /synthea/
        /synthea/post-transactions.sh
    volumes:
      - ./synthea/:/synthea/
    depends_on:
      fhir:
        condition: service_started

  pathling:
    image: docker.io/aehrc/pathling:7.2.0@sha256:31b5ef50294e55136ae2278c2d0b8435a96a15b5da040ec785effb51875d08d3
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    environment:
      JAVA_TOOL_OPTIONS: |
        -Xmx12g
        -Xss64m
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -Duser.timezone=UTC
        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
        --add-opens=java.base/java.net=ALL-UNNAMED
        --add-opens=java.base/java.nio=ALL-UNNAMED
        --add-opens=java.base/java.util=ALL-UNNAMED
        --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
      pathling.storage.warehouseUrl: s3a://fhir
      pathling.storage.cacheDatasets: "false"
      pathling.query.cacheResults: "false"
      pathling.import.allowableSources: file:///tmp/import/
      pathling.terminology.enabled: "false"
      pathling.terminology.serverUrl: http://localhost:8080/i-dont-exist
      fs.s3a.endpoint: "http://minio:9000"
      fs.s3a.access.key: "admin"
      # kics-scan ignore-line
      fs.s3a.secret.key: "miniopass" # gitleaks:allow
      fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
      fs.s3a.path.style.access: "true"
      spark.sql.parquet.compression.codec: "zstd"
      spark.io.compression.codec: "zstd"
      parquet.compression.codec.zstd.level: "9"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
      spark.master: "local[*]"
      spark.driver.memory: 10g
    ports:
      - "127.0.0.1:8082:8080"
      - "127.0.0.1:4040:4040"
    volumes:
      - ./synthea/bulk/fhir/:/tmp/import/:ro
    depends_on:
      wait-for-minio:
        condition: service_completed_successfully

  wait-for-pathling:
    image: docker.io/curlimages/curl:8.13.0@sha256:d43bdb28bae0be0998f3be83199bfb2b81e0a30b034b6d7586ce7e05de34c3fd
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: "no"
    environment:
      PATHLING_URL: http://pathling:8080
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        until [ "$(curl -s -o /dev/null -L -w "%{http_code}" "$$PATHLING_URL/fhir/metadata")" == "200" ]; do
            echo "$(date): Waiting for pathling server @ $$PATHLING_URL to be up";
            sleep 5;
        done;
    depends_on:
      pathling:
        condition: service_started

  import-resources:
    image: docker.io/curlimages/curl:8.13.0@sha256:d43bdb28bae0be0998f3be83199bfb2b81e0a30b034b6d7586ce7e05de34c3fd
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: "no"
    environment:
      PATHLING_URL: http://pathling:8080
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        curl --fail -X POST --header 'Content-Type: application/fhir+json' --data @/tmp/pathling-import-request.json --url 'http://pathling:8080/fhir/$$import'
    volumes:
      - ./pathling-import-request.json:/tmp/pathling-import-request.json:ro
    depends_on:
      wait-for-pathling:
        condition: service_completed_successfully

  warehousekeeper:
    image: ghcr.io/miracum/util-images/warehousekeeper:v0.1.12@sha256:ba2b1169754da8d971a961f7318ee29b5ea04250cf4f921ed51d49f3bc24b18d
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: "no"
    environment:
      AWS_ALLOW_HTTP: "1"
      AWS_REGION: "eu-central-1"
      AWS_ENDPOINT_URL: "http://minio:9000"
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "miniopass"
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        python3 /opt/warehousekeeper/warehousekeeper.py register --bucket-name=fhir --database-name-prefix=default/ --hive-metastore=thrift://hive-metastore:9083
        python3 /opt/warehousekeeper/warehousekeeper.py vacuum   --bucket-name=fhir --database-name-prefix=default/ --retention-hours=0 --dry-run=false --enforce-retention-duration=false
    volumes:
      - ./config/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf:ro
    depends_on:
      import-resources:
        condition: service_completed_successfully
      hive-metastore:
        condition: service_started
      trino:
        condition: service_started

  metastore-db:
    image: docker.io/bitnami/postgresql:17.4.0@sha256:a8a39ccbf84b527b470ace397c3b0bb0b8d97bad194b142f4a4128a20c1b8b32
    profiles:
      - trino
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: unless-stopped
    environment:
      POSTGRESQL_USERNAME: hive
      POSTGRESQL_PASSWORD: hive
      POSTGRESQL_DATABASE: metastore
    deploy:
      resources:
        limits:
          memory: 1G

  hive-metastore:
    image: ghcr.io/miracum/util-images/hive-metastore:v1.2.4@sha256:d35d9dcb389953cff78171c36f40e7097aaee4bf97e5b09dbe8d0d90521fad5b
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: unless-stopped
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: |
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=hive
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "miniopass"
      AWS_DEFAULT_REGION: "eu-central-1"
    volumes:
      - ./config/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
    depends_on:
      metastore-db:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 1G

  trino:
    image: docker.io/trinodb/trino:475@sha256:a04abba5e99d614dfe28dd16e0d5dec9e99dfea2a694cf8d0685f5c9e3c0df60
    profiles:
      - trino
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    restart: unless-stopped
    environment:
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "miniopass"
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./config/trino/etc:/usr/lib/trino/etc:ro
      - ./config/trino/catalog:/etc/trino/catalog:ro
    depends_on:
      hive-metastore:
        condition: service_started
