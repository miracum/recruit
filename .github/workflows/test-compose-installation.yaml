name: test-docker-compose
on:
  workflow_call:
    inputs:
      image-tag:
        description: "Name of the image tag to test with"
        type: string
        required: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04
    env:
      RECRUIT_IMAGE_BASE_NAME: ghcr.io/${{ github.repository }}
      RECRUIT_IMAGE_TAG: ${{ inputs.image-tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Download all artifacts
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: "*-build-artifacts"
          path: /tmp

      - name: Load container images
        # only load images from artifacts on PRs, otherwise the image
        # is already pushed and tagged in the registry
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          ls -lsa /tmp
          docker load --input /tmp/query-build-artifacts/query-image.tar
          docker load --input /tmp/list-build-artifacts/list-image.tar
          docker load --input /tmp/notify-build-artifacts/notify-image.tar
          docker image ls -a

      - name: Delete downloaded artifacts
        run: |
          df -h
          rm -rf /tmp/*-build-artifacts
          rm -rf /tmp/*-attestations
          df -h

      - name: Deploy using Docker Compose in staging mode
        run: |
          docker compose \
            --project-name=recruit \
            --env-file=docker-compose/.staging.env \
            -f docker-compose/docker-compose.yaml \
            -f docker-compose/docker-compose.staging.yaml up --detach

      - name: List containers
        run: |
          docker compose \
            --project-name=recruit \
            --env-file=docker-compose/.staging.env \
            -f docker-compose/docker-compose.yaml \
            -f docker-compose/docker-compose.staging.yaml ps

      - name: Run basic health probes
        run: |
          docker compose \
            --project-name=recruit \
            --env-file=docker-compose/.staging.env \
            -f docker-compose/docker-compose.yaml \
            -f docker-compose/docker-compose.staging.yaml \
            -f docker-compose/docker-compose.probe.yaml run health-probes

      - name: Display logs
        if: always()
        run: |
          docker compose \
            --project-name=recruit \
            --env-file=docker-compose/.staging.env \
            -f docker-compose/docker-compose.yaml \
            -f docker-compose/docker-compose.staging.yaml logs
