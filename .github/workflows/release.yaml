name: release

on:
  workflow_call:
    secrets:
      token:
        description: Token used to create a PR against the miracum/charts repository
        required: true

permissions: {}

jobs:
  publish-helm-chart:
    name: publish helm chart
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      # needed for cosign
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Add helm repos and update deps
        run: |
          task helm-add-repos
          helm dep build charts/recruit

      # TODO: maybe replace image tags in values.yaml with digests before packaging
      - name: Package, upload, and sign Helm chart
        run: |
          CHART_VERSION=$(yq .version charts/recruit/Chart.yaml)

          helm package charts/recruit/
          helm push "recruit-${CHART_VERSION}.tgz" oci://ghcr.io/${{ github.repository }}/charts

          cp "recruit-${CHART_VERSION}.tgz" recruit-helm-chart.tgz

          cosign sign --yes "ghcr.io/${{ github.repository }}/charts/recruit:${CHART_VERSION}"

      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: helm-chart
          path: |
            recruit-helm-chart.tgz

  sync-helm-chart-to-central-chart-repo:
    name: sync helm chart to central chart repo
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: recruit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: miracum/charts
          path: miracum-charts

      - name: copy local helm chart to charts repo
        run: |
          # delete the existing recruit chart first. Otherwise we wouldn't be able
          # to sync file removals.
          rm -rf miracum-charts/charts/recruit
          cp -r recruit/charts/recruit miracum-charts/charts/

      - name: get chart version
        id: chart-version
        run: |
          CHART_VERSION=$(yq .version recruit/charts/recruit/Chart.yaml)
          echo "version=${CHART_VERSION}" >> "$GITHUB_OUTPUT"

      - uses: peter-evans/create-pull-request@70a41aba780001da0a30141984ae2a0c95d8704e # v6.0.2
        with:
          token: ${{ secrets.token }}
          path: miracum-charts
          title: "chore(deps): updated recruit chart to ${{ steps.chart-version.outputs.version }}"
          commit-message: "chore(deps): updated recruit chart to ${{ steps.chart-version.outputs.version }}"
          branch: sync-recruit-chart-from-source-repo

  # experimental
  publish-kyverno-policies:
    name: publish kyverno policies
    runs-on: ubuntu-22.04
    container: ghcr.io/chgl/kube-powertools:v2.2.54@sha256:0fd531d84f03afd66810f216684cd710b89a593f3829a0156ad262e065b4a82c
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Push policy folder
        env:
          KYVERNO_EXPERIMENTAL: "1"
        run: |
          VERSION=$(cat version.txt)
          kyverno oci push -i "ghcr.io/${{ github.repository }}/kyverno-policies:${VERSION}" --policy policies/
          cosign sign --yes "ghcr.io/${{ github.repository }}/kyverno-policies:${VERSION}"

  prepare-artifacts:
    name: prepare artifacts
    runs-on: ubuntu-22.04
    needs:
      - publish-helm-chart
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write # to upload artifacts to the release
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download Helm chart
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4
        with:
          name: helm-chart
          path: /tmp

      - name: Create dist dir
        run: |
          mkdir -p dist/

      - name: Add Helm chart to dist
        run: |
          ls -lsa /tmp
          cp /tmp/recruit-helm-chart.tgz dist/

      # TODO: replace tags with digests in compose - requires waiting for ci/build to be completed
      #       turn this workflow into a reusable one and call it at the end of ci.yaml
      #       yq '(.services[].image | select(. == "ghcr.io/miracum/recruit/list:*")) += "@sha256:123456"' docker-compose/docker-compose.yaml
      - name: Build Docker Compose deployment bundle
        run: |
          cp -r docker-compose/ dist/
          tar -C dist -zcvf dist/recruit-docker-compose.tgz docker-compose/

      - name: Generate SLSA subject for release assets
        id: hash
        working-directory: dist
        run: |
          sha256sum recruit-docker-compose.tgz recruit-helm-chart.tgz > checksums.sha256
          echo "hashes=$(base64 -w0 < checksums.sha256)" >> "$GITHUB_OUTPUT"

      - name: upload assets to release
        uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564 # v2
        with:
          files: |
            dist/*.tgz
            dist/*.sha256

  provenance:
    needs:
      - prepare-artifacts
    permissions:
      actions: read # To read the workflow path.
      # To sign the provenance.
      id-token: write
      contents: write # To add assets to a release.
    # can't be referenced by digest. See <https://github.com/slsa-framework/slsa-github-generator#verification-of-provenance>
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.10.0
    with:
      base64-subjects: "${{ needs.prepare-artifacts.outputs.hashes }}"
      compile-generator: true # Workaround for https://github.com/slsa-framework/slsa-github-generator/issues/1163
      upload-assets: true
