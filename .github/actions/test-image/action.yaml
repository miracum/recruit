name: "Test container image in basic smple test"
description: "Runs Docker Compose-based basic smoke tests against a newly build image"
inputs:
  project-name:
    description: "Name of the project inside the /src/ dir"
    required: true
  e2e-test-directory:
    description: "Directory for running e2e tests via docker compose."
    default: "tests/e2e/"
    required: false
  image-name:
    description: "name of the image without a tag"
    required: true
  image-tag:
    description: "tag of the image to test"
    required: true

runs:
  using: composite
  steps:
    - name: Download artifact
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
      if: ${{ github.event_name == 'pull_request' }}
      with:
        name: ${{ inputs.project-name }}-build-artifacts
        path: /tmp

    - name: Load image
      shell: bash
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        docker load --input /tmp/${{ inputs.project-name }}-image.tar
        docker image ls -a

    - name: Pull image if not in PR
      shell: bash
      if: ${{ github.event_name != 'pull_request' }}
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        docker pull "${IMAGE_NAME}:${IMAGE_TAG}"
        docker image ls -a

    - name: Run container structure tests
      shell: bash
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        curl -LO https://github.com/GoogleContainerTools/container-structure-test/releases/download/v1.14.0/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64

        ./container-structure-test-linux-amd64 test --image="${IMAGE_NAME}:${IMAGE_TAG}" --config=tests/container-structure/common-tests.yaml

    - name: Run isolated smoke test
      shell: bash
      working-directory: src/${{ inputs.project-name }}
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        docker compose -f ${{ inputs.e2e-test-directory }}/docker-compose.yaml build
        docker compose -f ${{ inputs.e2e-test-directory }}/docker-compose.yaml run tester

    - name: Print test logs and stop all running containers
      if: ${{ always() }}
      shell: bash
      working-directory: src/${{ inputs.project-name }}
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        docker compose -f ${{ inputs.e2e-test-directory }}/docker-compose.yaml logs
        docker compose -f ${{ inputs.e2e-test-directory }}/docker-compose.yaml down --volumes --remove-orphans
